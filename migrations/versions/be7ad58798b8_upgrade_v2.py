"""upgrade_v2

Revision ID: be7ad58798b8
Revises: 7ff57f05aba4
Create Date: 2020-01-16 18:00:34.807053

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'be7ad58798b8'
down_revision = '7ff57f05aba4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_result',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('event_result_id', sa.Integer(), nullable=False),
    sa.Column('competition', sa.String(length=128), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_result_id')
    )
    op.create_table('adjudicator_competition_assignment',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('adjudicator_competition_assignment_id', sa.Integer(), nullable=False),
    sa.Column('floor', sa.String(length=48), nullable=True),
    sa.Column('assignment', sa.Enum('lead', 'follow', 'both', name='adjudicatorassignmentenum'), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('adjudicator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjudicator_id'], ['adjudicator.adjudicator_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('adjudicator_competition_assignment_id')
    )
    op.add_column('adjudicator', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('adjudicator', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('adjudicator', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key('adjudicator_ibfk_1', 'adjudicator', 'user', ['user_id'], ['user_id'])
    op.add_column('competition', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('competition', sa.Column('results_string', sa.JSON(), nullable=True))
    op.add_column('competition', sa.Column('test', sa.Boolean(), nullable=False))
    op.add_column('competition', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('couple', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('couple', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('couple_present', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('couple_present', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('dance', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('dance', sa.Column('order', sa.Integer(), nullable=False))
    op.add_column('dance', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('dance_active', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('dance_active', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('dancer', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('dancer', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('dancing_class', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('dancing_class', sa.Column('tag', sa.String(length=12), nullable=False))
    op.add_column('dancing_class', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('dancing_class', 'name',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=64),
               nullable=False)
    op.create_unique_constraint('tag', 'dancing_class', ['tag'])
    op.add_column('discipline', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('discipline', sa.Column('tag', sa.String(length=12), nullable=False))
    op.add_column('discipline', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('discipline', 'name',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=64),
               nullable=False)
    op.create_unique_constraint('tag', 'discipline', ['tag'])
    op.add_column('event', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('event', sa.Column('date', sa.Date(), nullable=False))
    op.add_column('event', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('event', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('final_placing', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('final_placing', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('heat', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('heat', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('mark', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('mark', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('round', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('round', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('round_result', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('round_result', sa.Column('final_placing', sa.Float(), nullable=True))
    op.add_column('round_result', sa.Column('follow', sa.Boolean(), nullable=True))
    op.add_column('round_result', sa.Column('total', sa.Float(), nullable=True))
    op.add_column('round_result', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('reset_index', sa.Integer(), nullable=False))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'reset_index')
    op.drop_column('user', 'created_at')
    op.drop_column('round_result', 'updated_at')
    op.drop_column('round_result', 'total')
    op.drop_column('round_result', 'follow')
    op.drop_column('round_result', 'final_placing')
    op.drop_column('round_result', 'created_at')
    op.drop_column('round', 'updated_at')
    op.drop_column('round', 'created_at')
    op.drop_column('mark', 'updated_at')
    op.drop_column('mark', 'created_at')
    op.drop_column('heat', 'updated_at')
    op.drop_column('heat', 'created_at')
    op.drop_column('final_placing', 'updated_at')
    op.drop_column('final_placing', 'created_at')
    op.drop_column('event', 'updated_at')
    op.drop_column('event', 'is_active')
    op.drop_column('event', 'date')
    op.drop_column('event', 'created_at')
    op.drop_constraint('tag', 'discipline', type_='unique')
    op.alter_column('discipline', 'name',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=64),
               nullable=True)
    op.drop_column('discipline', 'updated_at')
    op.drop_column('discipline', 'tag')
    op.drop_column('discipline', 'created_at')
    op.drop_constraint('tag', 'dancing_class', type_='unique')
    op.alter_column('dancing_class', 'name',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=64),
               nullable=True)
    op.drop_column('dancing_class', 'updated_at')
    op.drop_column('dancing_class', 'tag')
    op.drop_column('dancing_class', 'created_at')
    op.drop_column('dancer', 'updated_at')
    op.drop_column('dancer', 'created_at')
    op.drop_column('dance_active', 'updated_at')
    op.drop_column('dance_active', 'created_at')
    op.drop_column('dance', 'updated_at')
    op.drop_column('dance', 'order')
    op.drop_column('dance', 'created_at')
    op.drop_column('couple_present', 'updated_at')
    op.drop_column('couple_present', 'created_at')
    op.drop_column('couple', 'updated_at')
    op.drop_column('couple', 'created_at')
    op.drop_column('competition', 'updated_at')
    op.drop_column('competition', 'test')
    op.drop_column('competition', 'results_string')
    op.drop_column('competition', 'created_at')
    op.drop_constraint('adjudicator_ibfk_1', 'adjudicator', type_='foreignkey')
    op.drop_column('adjudicator', 'user_id')
    op.drop_column('adjudicator', 'updated_at')
    op.drop_column('adjudicator', 'created_at')
    op.drop_table('adjudicator_competition_assignment')
    op.drop_table('event_result')
    # ### end Alembic commands ###
