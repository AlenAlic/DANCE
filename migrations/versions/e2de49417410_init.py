"""init

Revision ID: e2de49417410
Revises: 
Create Date: 2019-01-17 10:59:08.777167

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e2de49417410'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adjudicator',
    sa.Column('adjudicator_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('tag', sa.String(length=6), nullable=True),
    sa.Column('dance', sa.Integer(), nullable=False),
    sa.Column('round', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('adjudicator_id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('dancer',
    sa.Column('dancer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=128), nullable=True),
    sa.Column('team', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('dancer_id'),
    sa.UniqueConstraint('number', 'role', name='_number_role_uc')
    )
    op.create_table('dancing_class',
    sa.Column('dancing_class_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('dancing_class_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('discipline',
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('discipline_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('event_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('competition',
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('dancing_class_id', sa.Integer(), nullable=True),
    sa.Column('discipline_id', sa.Integer(), nullable=True),
    sa.Column('floors', sa.Integer(), nullable=True),
    sa.Column('when', sa.DateTime(), nullable=False),
    sa.Column('mode', sa.Enum('single_partner', 'random_single_partner', 'change_per_round', 'change_per_dance', name='competitionmode'), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('qualification_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dancing_class_id'], ['dancing_class.dancing_class_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discipline_id'], ['discipline.discipline_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['qualification_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('competition_id')
    )
    op.create_table('couple',
    sa.Column('couple_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('follow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['follow_id'], ['dancer.dancer_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lead_id'], ['dancer.dancer_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('couple_id'),
    sa.UniqueConstraint('lead_id', 'follow_id', name='_lead_follow_uc')
    )
    op.create_table('dance',
    sa.Column('dance_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('tag', sa.String(length=6), nullable=True),
    sa.Column('discipline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['discipline_id'], ['discipline.discipline_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dance_id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('access', sa.Integer(), nullable=False),
    sa.Column('adjudicator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjudicator_id'], ['adjudicator.adjudicator_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_access'), 'user', ['access'], unique=False)
    op.create_table('competition_adjudicator',
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('adjudicator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjudicator_id'], ['adjudicator.adjudicator_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('competition_id', 'adjudicator_id', name='_competition_adjudicator_uc')
    )
    op.create_table('competition_couple',
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('competition_id', 'couple_id', name='_competition_couple_uc')
    )
    op.create_table('competition_follow',
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('dancer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dancer_id'], ['dancer.dancer_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('competition_id', 'dancer_id', name='_competition_follow_uc')
    )
    op.create_table('competition_lead',
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('dancer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dancer_id'], ['dancer.dancer_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('competition_id', 'dancer_id', name='_competition_lead_uc')
    )
    op.create_table('round',
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('qualification', 'general_look', 'first_round', 're_dance', 'second_round', 'intermediate_round', 'semi_final', 'final', name='roundtype'), nullable=True),
    sa.Column('min_marks', sa.Integer(), nullable=True),
    sa.Column('max_marks', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.competition_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('round_id')
    )
    op.create_table('dance_active',
    sa.Column('dance_active_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('dance_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dance_id'], ['dance.dance_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dance_active_id')
    )
    op.create_table('final_placing',
    sa.Column('final_placing_id', sa.Integer(), nullable=False),
    sa.Column('final_placing', sa.Integer(), nullable=True),
    sa.Column('adjudicator_id', sa.Integer(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('dance_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjudicator_id'], ['adjudicator.adjudicator_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dance_id'], ['dance.dance_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('final_placing_id')
    )
    op.create_table('heat',
    sa.Column('heat_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('dance_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dance_id'], ['dance.dance_id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('heat_id')
    )
    op.create_table('round_couple',
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('round_id', 'couple_id', name='_round_couple_uc')
    )
    op.create_table('round_dance',
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.Column('dance_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dance_id'], ['dance.dance_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('round_id', 'dance_id', name='_round_dance_uc')
    )
    op.create_table('round_result',
    sa.Column('round_result_id', sa.Integer(), nullable=False),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.Column('marks', sa.Integer(), nullable=True),
    sa.Column('placing', sa.String(length=12), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['round_id'], ['round.round_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('round_result_id')
    )
    op.create_table('couple_present',
    sa.Column('couple_present_id', sa.Integer(), nullable=False),
    sa.Column('present', sa.Boolean(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.Column('heat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['heat_id'], ['heat.heat_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('couple_present_id')
    )
    op.create_table('heat_couple',
    sa.Column('heat_id', sa.Integer(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['heat_id'], ['heat.heat_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('heat_id', 'couple_id', name='_heat_couple_uc')
    )
    op.create_table('mark',
    sa.Column('mark_id', sa.Integer(), nullable=False),
    sa.Column('mark', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Integer(), nullable=True),
    sa.Column('adjudicator_id', sa.Integer(), nullable=True),
    sa.Column('couple_id', sa.Integer(), nullable=True),
    sa.Column('heat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adjudicator_id'], ['adjudicator.adjudicator_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['couple_id'], ['couple.couple_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['heat_id'], ['heat.heat_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mark_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mark')
    op.drop_table('heat_couple')
    op.drop_table('couple_present')
    op.drop_table('round_result')
    op.drop_table('round_dance')
    op.drop_table('round_couple')
    op.drop_table('heat')
    op.drop_table('final_placing')
    op.drop_table('dance_active')
    op.drop_table('round')
    op.drop_table('competition_lead')
    op.drop_table('competition_follow')
    op.drop_table('competition_couple')
    op.drop_table('competition_adjudicator')
    op.drop_index(op.f('ix_user_access'), table_name='user')
    op.drop_table('user')
    op.drop_table('dance')
    op.drop_table('couple')
    op.drop_table('competition')
    op.drop_table('event')
    op.drop_table('discipline')
    op.drop_table('dancing_class')
    op.drop_table('dancer')
    op.drop_table('adjudicator')
    # ### end Alembic commands ###
